#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start calendar2image service
# ==============================================================================

bashio::log.info "Starting Calendar2Image..."

# Debug: Show all mount points
bashio::log.info "=== Mount Points ==="
mount | grep -i addon || bashio::log.info "No addon mounts found"
bashio::log.info "=== Directories ==="
ls -la / | grep -i addon || bashio::log.info "No addon directories found"
ls -la /data 2>/dev/null || bashio::log.info "No /data directory"

# At this point, volumes should be mounted
# Find the config directory
if [ -d "/addon_configs" ]; then
    bashio::log.info "Found /addon_configs directory"
    
    CONFIG_DIR=$(find /addon_configs -maxdepth 1 -type d -name "*_calendar2image" 2>/dev/null | head -n 1)
    
    if [ -z "$CONFIG_DIR" ]; then
        bashio::log.warning "Could not find *_calendar2image directory"
        CONFIG_DIR="/addon_configs/calendar2image"
        mkdir -p "$CONFIG_DIR"
    fi
else
    bashio::log.warning "/addon_configs not found, checking alternatives"
    
    # Check other possible locations
    if [ -d "/config/addons_config" ]; then
        bashio::log.info "Found /config/addons_config"
        CONFIG_DIR="/config/addons_config/calendar2image"
    elif [ -d "/share" ]; then
        bashio::log.info "Using /share for config"
        CONFIG_DIR="/share/calendar2image"
    else
        CONFIG_DIR="/addon_configs/calendar2image"
    fi
    
    mkdir -p "$CONFIG_DIR" || true
fi

bashio::log.info "Using config directory: $CONFIG_DIR"

# Copy sample files if they don't exist
if [ ! -f "$CONFIG_DIR/sample-0.json" ]; then
    bashio::log.info "Copying sample-0.json..."
    cp /app/sample-0.json "$CONFIG_DIR/sample-0.json"
fi

if [ ! -f "$CONFIG_DIR/README.md" ]; then
    bashio::log.info "Copying README.md..."
    cp /app/config-sample-README.md "$CONFIG_DIR/README.md"
fi

bashio::log.info "Config directory contents:"
ls -la "$CONFIG_DIR/"

# Export CONFIG_DIR for the app to use
export CONFIG_DIR

# Start the Node.js application
cd /app
exec node src/index.js
